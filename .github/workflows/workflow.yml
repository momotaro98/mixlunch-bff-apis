name: Workflow
on: push
jobs:

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '10.x'

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Use cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run unit test
        run: yarn test

      - name: Run linter
        run: yarn lint

  deploy:
    # Ref link: https://dev.classmethod.jp/articles/github-action-ecr-push/
    name: Deploy app
    needs: test
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO_NAME }}
      run: |
        IMAGE_TAG=latest
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Render Amazon ECS task definition
      id: render-container
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: aws/task-definition.json
        container-name: mixlunch-bff
        image: 402019921506.dkr.ecr.ap-northeast-1.amazonaws.com/mixlunch-bff:latest

    - name: Deploy to Amazon ECS service
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.render-container.outputs.task-definition }}
        service: mixlunch-bff-service
        cluster: mixlunch-ecs-cluster

  notify-deploy:
    name: Notify deployment
    needs: deploy
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:

    - name: Checkout code
      # Checkout is needed to get secrets
      uses: actions/checkout@v2

    - name: Notify to Slack
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      run: |
        echo "Notifying to Slack"
        bash <(curl -Ls https://gist.githubusercontent.com/momotaro98/96aa94b67d487942d05268b8c6a1d6cc/raw/mixlunch_common_deploy_slack_notify.sh)
        echo "Notifying to Slack Done!"
